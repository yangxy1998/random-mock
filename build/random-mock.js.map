{"version":3,"sources":["webpack://rmock/webpack/universalModuleDefinition","webpack://rmock/webpack/bootstrap","webpack://rmock/./src/distribution/Distribution.ts","webpack://rmock/./src/util/Analysis.ts","webpack://rmock/./src/util/Rule.ts","webpack://rmock/./src/index.ts","webpack://rmock/./src/util/generator.ts","webpack://rmock/./src/distribution/index.ts","webpack://rmock/./src/distribution/Discrete.ts","webpack://rmock/./src/distribution/Continuous.ts","webpack://rmock/./src/distribution/Compound.ts","webpack://rmock/./src/util/Attribute.ts"],"names":[],"mappings":"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","file":"random-mock.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rmock\"] = factory();\n\telse\n\t\troot[\"rmock\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export abstract class Distribution {\r\n    constructor() {}\r\n    abstract random(): any\r\n    static Random(...args: any[]): any {}\r\n}\r\n","export function AnalysisEffect(effect: Function) {\r\n    const str = effect.toString()\r\n    const left = str.indexOf('(')\r\n    const right = str.indexOf(')')\r\n    const names = str\r\n        .substring(left + 1, right)\r\n        .replace(/\\s/g, '')\r\n        .split(',')\r\n    return (item) => {\r\n        const args = names.map((name) => item[name])\r\n        return effect(...args)\r\n    }\r\n}\r\nexport function AnalysisFilter(filter: Function) {\r\n    const str = filter.toString()\r\n    const left = str.indexOf('(')\r\n    const right = str.indexOf(')')\r\n    const names = str\r\n        .substring(left + 1, right)\r\n        .replace(/\\s/g, '')\r\n        .split(',')\r\n    return (item, index?, items?) => {\r\n        const args = names.map((name) => item[name])\r\n        return filter(...args)\r\n    }\r\n}\r\n","import { Attribute, AttributeType } from './Attribute'\r\n\r\nexport interface Rule {\r\n    // rule like y = 3 * x + 1 ± 0.5\r\n    dependent: string\r\n    arguments: Array<string>\r\n    filter?: (...args: any) => boolean\r\n    effect: (...args: any) => any\r\n    confidence?: number\r\n}\r\nexport function GetRuleOrder(attributes: Attribute[], rules: Rule[]) {\r\n    let leading = []\r\n    let following = []\r\n    let order: any[] = []\r\n    function updateState() {\r\n        following = []\r\n        for (let rule of rules) {\r\n            if (!following.includes(rule.dependent)) following.push(rule.dependent)\r\n        }\r\n        for (let attribute of attributes) {\r\n            if (!following.includes(attribute.name) && !leading.includes(attribute.name)) {\r\n                order.push(attribute)\r\n                leading.push(attribute.name)\r\n            }\r\n        }\r\n    }\r\n    updateState()\r\n    let i = 0\r\n    while (rules.length > 0) {\r\n        let rule = rules[i]\r\n        let clear = true\r\n        rule.arguments.forEach((argument) => {\r\n            if (!leading.includes(argument)) {\r\n                clear = false\r\n            }\r\n        })\r\n        if (!clear) {\r\n            i++\r\n        } else {\r\n            order.push(rule)\r\n            rules.splice(i, 1)\r\n        }\r\n        if (i >= rules.length) {\r\n            updateState()\r\n            i = 0\r\n        }\r\n    }\r\n    return order\r\n}\r\n","import { Generator, DataMode } from './util/generator'\r\nimport { Distribution } from './distribution'\r\nimport { AttributeType } from './util/Attribute'\r\nconst Mocker = Generator\r\nexport { AttributeType, DataMode, Distribution, Mocker }\r\n","import { AnalysisEffect, AnalysisFilter } from './Analysis'\r\nimport { Attribute } from './Attribute'\r\nimport { GetRuleOrder, Rule } from './Rule'\r\n\r\ninterface GeneratorConfiguation {\r\n    attributes: Array<Attribute>\r\n    rules: Array<Rule> // rules like cause => effect\r\n}\r\ninterface DataConfiguration {\r\n    count: number\r\n    mode: DataMode\r\n    settings?: any\r\n}\r\nexport enum DataMode {\r\n    Object,\r\n    Table\r\n}\r\nexport enum Table {\r\n    ArrangeByRow,\r\n    ArrangeByCol\r\n}\r\ninterface TableSettings {\r\n    head: boolean\r\n    mode: Table\r\n}\r\nexport class Generator {\r\n    config: GeneratorConfiguation\r\n    attributes: {}\r\n    constructor(config: GeneratorConfiguation) {\r\n        this.config = config\r\n        this.attributes = {}\r\n        for (let attribute of config.attributes) {\r\n            this.attributes[attribute.name] = {\r\n                type: attribute.type,\r\n                distribution: attribute.distribution\r\n            }\r\n        }\r\n    }\r\n    create(\r\n        config: DataConfiguration = {\r\n            count: 100,\r\n            mode: DataMode.Object\r\n        }\r\n    ) {\r\n        if (config.mode === DataMode.Object) {\r\n            return this._createObjectList(config.count)\r\n        } else if (config.mode === DataMode.Table) {\r\n            return this._createTable(config.count, config.settings)\r\n        }\r\n    }\r\n    private _createObjectList(count: number) {\r\n        let items = []\r\n        for (let i = 0; i < count; i++) {\r\n            items.push({})\r\n        }\r\n        let rules = GetRuleOrder(this.config.attributes, this.config.rules)\r\n        for (let rule of rules) {\r\n            if (rule.name) {\r\n                //attribute\r\n                items.forEach((item) => {\r\n                    if (!item[rule.name])\r\n                        // not initialized attribute\r\n                        item[rule.name] = rule.distribution.random()\r\n                })\r\n            } else if (rule.filter) {\r\n                //rule\r\n                items.filter(AnalysisFilter(rule.filter)).forEach((item) => {\r\n                    if (!item[rule.dependent] && Math.random() <= rule.confidence)\r\n                        // not initialized attribute\r\n                        item[rule.dependent] = AnalysisEffect(rule.effect)(item)\r\n                })\r\n            } else {\r\n                //rule\r\n                items.forEach((item) => {\r\n                    if (!item[rule.dependent] && Math.random() <= rule.confidence)\r\n                        // not initialized attribute\r\n                        item[rule.dependent] = AnalysisEffect(rule.effect)(item)\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    }\r\n    private _createTable(count: number, settings = { head: true, mode: Table.ArrangeByRow }) {\r\n        if (settings.mode === Table.ArrangeByRow) {\r\n            let header = this.config.attributes.map((attribute) => attribute.name)\r\n            let items = settings.head ? [header] : []\r\n            for (let i = 0; i < count; i++) {\r\n                items.push(Array(this.config.attributes.length))\r\n            }\r\n            let rules = GetRuleOrder(this.config.attributes, this.config.rules)\r\n            for (let rule of rules) {\r\n                if (rule.type) {\r\n                    //attribute\r\n                    const index = header.indexOf(rule.name)\r\n                    items.forEach((item) => {\r\n                        if (!item[index]) item[index] = rule.distribution.random()\r\n                    })\r\n                } else {\r\n                    //rule\r\n                    const index = header.indexOf(rule.dependent)\r\n                    items.filter(AnalysisFilter(rule.filter)).forEach((item) => {\r\n                        item[index] =\r\n                            Math.random() <= rule.confidence\r\n                                ? AnalysisEffect(rule.effect)\r\n                                : this.attributes[index].distribution.random()\r\n                    })\r\n                }\r\n            }\r\n            return items\r\n        }\r\n    }\r\n}\r\n","import { Discrete } from './Discrete'\r\nimport { Uniform, Normal } from './Continuous'\r\nimport { Compound } from './Compound'\r\nimport { UniformDate, NormalDate } from './Date'\r\nexport const Distribution = {\r\n    Compound,\r\n    Continuous: {\r\n        Uniform, //均匀分布\r\n        Normal //正态分布\r\n    },\r\n    Date: {\r\n        Uniform,\r\n        Normal\r\n    },\r\n    Discrete: {\r\n        Discrete\r\n    }\r\n}\r\n","import { Distribution } from './Distribution'\r\n\r\nexport class Discrete extends Distribution {\r\n    range: any[]\r\n    p: number[]\r\n    constructor(range: any[], p: number[]) {\r\n        super()\r\n        this.range = range\r\n        if (p) {\r\n            this.p = [0]\r\n            let current = 0\r\n            for (let range_p of p) {\r\n                current += range_p\r\n                this.p.push(current)\r\n            }\r\n            if (current !== 1) {\r\n                throw Error('the total rate is not 1')\r\n            }\r\n        } else {\r\n            this.p = []\r\n            for (let i = 0; i < range.length; i++) {\r\n                this.p.push(i / range.length)\r\n            }\r\n            this.p.push(1)\r\n        }\r\n    }\r\n    random() {\r\n        let random = Math.random()\r\n        for (let i = 0; i < this.p.length - 1; i++) {\r\n            if (random <= this.p[i + 1] && random >= this.p[i]) return this.range[i]\r\n        }\r\n        return this.range[0]\r\n    }\r\n}\r\n","import { Distribution } from './Distribution'\r\n\r\nexport class Uniform extends Distribution {\r\n    begin: number\r\n    length: number\r\n    constructor(range) {\r\n        super()\r\n        this.begin = range[0]\r\n        this.length = range[1] - range[0]\r\n    }\r\n    random() {\r\n        return this.begin + Math.random() * this.length\r\n    }\r\n    static Random(range) {\r\n        let begin = range[0]\r\n        let length = range[1] - range[0]\r\n        return begin + Math.random() * length\r\n    }\r\n}\r\nexport class Normal extends Distribution {\r\n    u: number\r\n    sigma: number\r\n    constructor(u, sigma) {\r\n        super()\r\n        this.u = u\r\n        this.sigma = sigma\r\n    }\r\n    random() {\r\n        //Box-Muller\r\n        return this.u + Normal._BoxMuller() * this.sigma\r\n    }\r\n    static Random(u, sigma) {\r\n        return u + Normal._BoxMuller() * sigma\r\n    }\r\n    private static _BoxMuller() {\r\n        var u = 0.0,\r\n            v = 0.0,\r\n            w = 0.0,\r\n            c = 0.0\r\n        do {\r\n            //获得两个（-1,1）的独立随机变量\r\n            u = Math.random() * 2 - 1.0\r\n            v = Math.random() * 2 - 1.0\r\n            w = u * u + v * v\r\n        } while (w == 0.0 || w >= 1.0)\r\n        //这里就是 Box-Muller转换\r\n        c = Math.sqrt((-2 * Math.log(w)) / w)\r\n        //返回2个标准正态分布的随机数，封装进一个数组返回\r\n        //当然，因为这个函数运行较快，也可以扔掉一个\r\n        //return [u*c,v*c];\r\n        return u * c\r\n    }\r\n}\r\nexport default { Uniform, Normal }\r\n","import { Generator } from '../util/Generator'\r\nimport { Attribute } from '../util/Attribute'\r\nimport { Distribution } from './Distribution'\r\nimport { GetRuleOrder } from '../util/Rule'\r\nimport { AnalysisEffect, AnalysisFilter } from '../util/Analysis'\r\n\r\nexport class Compound extends Distribution {\r\n    orders: any\r\n    constructor(confiurations: any) {\r\n        super()\r\n        this.orders = GetRuleOrder(confiurations.attributes, confiurations.rules)\r\n    }\r\n    random() {\r\n        let item = {}\r\n        for (let rule of this.orders) {\r\n            if (rule.name) {\r\n                //attribute\r\n                if (!item[rule.name])\r\n                    // not initialized attribute\r\n                    item[rule.name] = rule.distribution.random()\r\n            } else if (rule.filter) {\r\n                //rule\r\n                if (\r\n                    AnalysisFilter(rule.filter)(item) &&\r\n                    !item[rule.dependent] &&\r\n                    Math.random() <= rule.confidence\r\n                )\r\n                    // not initialized attribute\r\n                    item[rule.dependent] = AnalysisEffect(rule.effect)(item)\r\n            } else {\r\n                //rule\r\n                if (!item[rule.dependent] && Math.random() <= rule.confidence)\r\n                    // not initialized attribute\r\n                    item[rule.dependent] = AnalysisEffect(rule.effect)(item)\r\n            }\r\n        }\r\n        return item\r\n    }\r\n}\r\n","import { Distribution } from 'src/distribution/Distribution'\r\n\r\nexport enum AttributeType {\r\n    Discrete,\r\n    Continuous,\r\n    Date,\r\n    Compound\r\n}\r\n\r\nexport interface Attribute {\r\n    name: string\r\n    type: AttributeType\r\n    distribution: Distribution\r\n}\r\n"],"sourceRoot":""}